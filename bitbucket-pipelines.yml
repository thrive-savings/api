options:
  docker: true

pipelines:
  branches:
    master:
      - step:
          name: Build & Push Docker Image.
          services:
            - docker
          script:
            - export IMAGE_NAME="${DOCKER_HUB_USERNAME}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BUILD_NUMBER}"
            - docker build -t $IMAGE_NAME -f deploy/Dockerfile .
            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
            - docker push $IMAGE_NAME
      - step:
          name: Deploy to AWS ECS
          image: atlassian/pipelines-awscli:latest
          deployment: production
          script:
            - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-"ca-central-1"}

            - export IMAGE_NAME="${DOCKER_HUB_USERNAME}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_BUILD_NUMBER}"
            - export ECS_CLUSTER_NAME="${BITBUCKET_REPO_OWNER}"
            - export ECS_SERVICE_NAME="${BITBUCKET_REPO_SLUG}"
            - export ECS_TASK_NAME="${BITBUCKET_REPO_SLUG}"

            # Create ECS cluster, task, service
            - aws ecs list-clusters | grep "${ECS_CLUSTER_NAME}" || aws ecs create-cluster --cluster-name "${ECS_CLUSTER_NAME}"
            # Updating the existing cluster, task, service
            - export TASK_VERSION=$(aws ecs register-task-definition
              --family "${ECS_TASK_NAME}"
              --container-definitions
              '[{"name":"app","image":"'"${IMAGE_NAME}"'","memory":1024}]'
              | jq --raw-output '.taskDefinition.revision')
            - echo "Registered ECS Task Definition:" "${TASK_VERSION}"
            # Create ECS Service
            - aws ecs list-services --cluster "${ECS_CLUSTER_NAME}"  | grep "${ECS_SERVICE_NAME}" || aws ecs create-service --service-name "${ECS_SERVICE_NAME}" --cluster "${ECS_CLUSTER_NAME}" --task-definition "${ECS_TASK_NAME}" --desired-count 3
            - aws ecs update-service --cluster "${ECS_CLUSTER_NAME}" --service "${ECS_SERVICE_NAME}" --task-definition "${ECS_TASK_NAME}:${TASK_VERSION}"
